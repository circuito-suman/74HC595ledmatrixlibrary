/*
//animations example
//by SUMAN SAHA
//my repo https://github.com/circuito-suman/74HC595ledmatrixlibrary


#include "LEDMatrix.h"
LEDMatrix ledMatrix;

const char* wifiSSID = "real"; // your WiFi SSID
const char* wifiPassword = "suman saha"; // your WiFi password

//  buffers for the animations
byte *buf;

byte keys[20][8] = {
  {B00111100, B01000010, B10100101, B10000001, B10111101, B10000001, B01000010, B00111100},
  {B00111100, B01000010, B10100101, B10000001, B10100101, B10011001, B01000010, B00111100},
  {B00111100, B01000010, B10100101, B10000001, B10111101, B10000001, B01000010, B00111100},
  {B00111100, B01000010, B10100101, B10000001, B10100101, B10011001, B01000010, B00111100},
  {B11111111, B10000001, B10111101, B10100101, B10111101, B10000001, B11111111, B00000000},
  {B00011000, B00111100, B01111110, B11011011, B11011011, B01111110, B00111100, B00011000},
  {B00111100, B01000010, B10011001, B10100101, B10100101, B10011001, B01000010, B00111100},
  {B00111100, B01000010, B10000001, B10111101, B10111101, B10000001, B01000010, B00111100},
  {B00111100, B01111110, B11111111, B11000011, B11000011, B11111111, B01111110, B00111100},
  {B00111100, B01000010, B10000001, B10111101, B10011001, B10000001, B01000010, B00111100},
  {B11111111, B10000001, B10111101, B10100101, B10111101, B10000001, B11111111, B00000000},
  {B00011000, B00111100, B01111110, B11011011, B11011011, B01111110, B00111100, B00011000},
  {B00111100, B01000010, B10011001, B10100101, B10100101, B10011001, B01000010, B00111100},
  {B00111100, B01000010, B10000001, B10111101, B10111101, B10000001, B01000010, B00111100},
  {B00111100, B01111110, B11111111, B11000011, B11000011, B11111111, B01111110, B00111100},
  {B00111100, B01000010, B10000001, B10111101, B10011001, B10000001, B01000010, B00111100},
  {B11111111, B10000001, B10111101, B10100101, B10111101, B10000001, B11111111, B00000000},
  {B00011000, B00111100, B01111110, B11011011, B11011011, B01111110, B00111100, B00011000},
  {B00111100, B01000010, B10011001, B10100101, B10100101, B10011001, B01000010, B00111100},
  {B00111100, B01000010, B10000001, B10111101, B10111101, B10000001, B01000010, B00111100}
};

// Animation control variables
unsigned long previousMillis = 0;
const unsigned long interval = 1000; // 1 second interval for animations
int animationState = 0; // To track current animation

void setup() {
    ledMatrix.begin(wifiSSID, wifiPassword);

  buf = ledMatrix.getBuffer();
  ledMatrix.clearDisplay();
}

void loop() {
  unsigned long currentMillis = millis();

  if (currentMillis - previousMillis >= interval) {
    previousMillis = currentMillis;
    animationState = (animationState + 1) % 20; // Cycle through 20 animations

    // Update buffer with the new pattern
    for (int i = 0; i < 8; i++) {
      buf[i] = keys[animationState][i];
    }
  }

  // Draw matrix
  ledMatrix.up();
}


*/